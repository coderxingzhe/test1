//
//  main.m
//  10-OC总结【掌握】
//
//  Created by apple on 15/1/16.
//  Copyright (c) 2015年 itcast. All rights reserved.
//

#import <Foundation/Foundation.h>
/*
  1.OC简介，OC是基于C语言的，OC是一门面向对象的语言
 
  2.第一个OC程序
  2.1 #import :导入头文件,与#include的升级版，可以自动防止头文件的重复包含
      #import <> 包含系统自带的头文件的
      #import "" 包含自己项目中的头文件的
  2.2 NSLog 与 printf类似，都是用来向控制台输出东西的，他们都支持格式化字符串
      1.NSLog 自动换行，日志信息
      2.NSLog使用格式化字符是OC中NSString对象,也就是说是以@“”类型的字符串
      3.NSLog中增加了一种输出对象的格式符 %@
  @ 创建特定的OC对象 如@“” 字符串 @1 NSNumber @[] 数组（了解）
  
  3.OC与C语言的对比
    1.源文件 c语言： .h .c OC .h 和 .m \.mm
    2.关键字 在OC增加很多以@开头关键字
    3.流程控制 OC 增加forin
    4.数据类型 
      BOOL 是一种逻辑类型，只有两个取值，YES 真， NO假
      Car * 指向对象的指针类型
  
 4.面向对象思想：
   1.需要办什么事，就先去找能够完成这个事对象，然后让这个对象做事情
 5.类和对象
   类：现实生活中的事物的抽象，只有有了类才可创建对象
   对象：是类的实例，做事情实体
 6.面向对象编程的步骤
   从现实生活中 -》抽象 -》类 -》使用OC语法定义类 -》通过类创建对象 -》指挥对象做事情
 
 7.第一个OC类
   7.1类定义 ： 类声明和类的实现
 
  类的声明
  @interface 类名: NSObject
  {
//     属性（成员变量）
       数据类型 成员名称;//成员名称以_开头
       .....
   }
//方法的声明
//方法类型 ： 对象方法 以-开头  类方法 以+开头
//返回值类型: (返回值类型)，在OC方法声明中的所有数据类型都必须使用（）扩起来
// eat 就是一个方法名称
 - (void) eat;
 
  @end
 
  类的实现
 //实现中的类名，必须与声明中一致
 //作用：用来实现类声明中方法的
 @implementation 类名
 
  - (void) eat
 {
      语句;
      .....
 }
 
 @end
 7.2 通过类创建对象
 类名 * 指针名称  = [类名 new];
 new做了三件事情：
 1.为对象分配存储空间
 2.将所有成员变量初始化为0
 3.返回指向该对象的指针
 
 7.3 通过对象访问成员变量
 如果在main方法想通过对象访问成员变量，就必须在声明成员变量的时候，前面加上@public
 
 对象名称->成员变量名称;
 
 7.4 通过对象调用方法，（给对象发送消息）
  
 [对象名称  方法名称];
 
 
 OC方法：
  
 无参数的方法
 - (返回值类型) 方法名称;如 -(void) eat;
 有一个参数方法
 // 参数说明符:  方法名称
 - (返回值类型)  参数说明符: (参数类型) 参数名称; 如 - (void) callToNum:(NSString *) phoneNum;
 有多个参数
 
 - (返回值类型) 参数说明符: (参数类型) 参数名称1 参数说明符: (参数类型) 参数名称2; 
// 如 - (void) sendMessage:(NSString *) content toNum:(NSString *) phoneNum;
 
 
 方法调用
 对象方法只能通过对象调用
//无参
 [对象  方法名]
//一个参数
 [对象  参数说明符: 实参]
//多个参数
 [对象  参数说明符1: 实参1 参数说明符2: 实参2]
 
 
//练习：在对象方法中可以直接访问成员变量
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 */


int main(int argc, const char * argv[]) {

    return 0;
}
